devtools::document()
devtools::document()
check_success <- function(success, trials) {
if (!is.numeric(success)) {
stop("invalid trials value")
} else if (length(trials) != 1))
stop("invalid success value")
else if (any(success < 0)) {
stop("invalid success value")
} else if (any(success %% 1 != 0)) {
stop("invalid success value")
} else if (any(success > trials)) {
stop("success cannot be greater than trials")
}
return(TRUE)
}
check_success <- function(success, trials) {
if (!is.numeric(success)) {
stop("invalid trials value")
} else if (length(trials) != 1){
stop("invalid success value")
}else if (any(success < 0)) {
stop("invalid success value")
} else if (any(success %% 1 != 0)) {
stop("invalid success value")
} else if (any(success > trials)) {
stop("success cannot be greater than trials")
}
return(TRUE)
}
devtools::document()
print.summary.binvar <- function(x, ...) {
cat('"Summary Binomial"\n')
cat('\n')
cat('Parameters\n')
cat('- number of trials:', x$trials)
cat('\n')
cat('- prob of success:', x$prob)
cat('\n\n')
cat('Measures')
cat('\n')
cat('- mean:', x$mean)
cat('\n')
cat('- variance:', x$variance)
cat('\n')
cat('- mode:', x$mode)
cat('\n')
cat('- skewness:', x$skewness)
cat('\n')
cat('- kurtosis:', x$kurtosis)
}
devtools::document()
devtools::check_man()
devtools::test()
devtools::test()
test_that("check_success with ok arguments", {
expect_true(check_success(1, 2))
expect_true(check_success(c(1,3), 4))
expect_true(check_success(0, 1))
})
devtools::test()
bin_distribution <- function(n, p) {
success <- c(0:n)
probability <- c()
for (k in 0:n) {
probability[k+1] <- bin_probability(k, n, p)
}
df <- data.frame(success = success, probability = probability)
class(df) <- c("bindis", "data.frame")
return(df)
}
devtools::test()
test_that("test bin_distribution", {
expect_is(bin_distribution(1,0.5), "bindis")
expect_length(bin_distribution(1,0.5), 2)
expect_error(bin_distribution(1,1.1),"invalid prob value")
})
devtools::test()
test_that("test bin_cumulative", {
expect_is(bin_cumulative(1,0.5), "bincum")
expect_length(bin_cumulative(1,0.5), 3)
expect_error(bin_cumulative(1,1.1),"invalid prob value")
})
devtools::test()
devtools::build_vignettes()
devtools::build_vignettes()
setwd("~/Desktop/binomial/R")
devtools::build_vignettes()
setwd("~/Desktop/binomialSima/R")
devtools::build()
devtools::install()
devtools::document()
devtools::document()
